diff --git a/app/api/api.ts b/app/api/api.ts
index 6badcaf..0d59099 100644
--- a/app/api/api.ts
+++ b/app/api/api.ts
@@ -135,7 +135,7 @@ export const takeHintPlayMode = async (questId: string, data: IHintRequest, acce
 
 export const editTeamPenalty = async (questId: string, data: IEditPenaltyRequest, accessToken?: string) =>
     client.handleServerRequest(`/quest/${questId}/penalty`, 'POST', data, undefined,
-        'same-origin', accessToken ? { 'Authorization': `Bearer ${accessToken}` } : {}, true);
+        'same-origin', accessToken ? { 'Authorization': `Bearer ${accessToken}` } : {});
 
 export const getTaskGroupsPlayMode = async (questId: string, accessToken?: string) =>
     client.handleServerRequest(`/quest/${questId}/play`, 'GET', undefined, undefined,
diff --git a/app/api/client/client.ts b/app/api/client/client.ts
index 62486c9..556a091 100644
--- a/app/api/client/client.ts
+++ b/app/api/client/client.ts
@@ -99,8 +99,7 @@ class Client {
         data?: DataType, // Жесть, потом придумаю получше
         queryParams?: Record<string, unknown>,
         credentials = 'same-origin',
-        headers: Record<string, string> = {},
-        returnsNoBody = false
+        headers: Record<string, string> = {}
     ) {
         const paramsString = Client.buildQueryString(queryParams);
         const url = paramsString ? `${this.backendUrl}${endpoint}?${paramsString}` : `${this.backendUrl}${endpoint}`;
@@ -109,7 +108,8 @@ class Client {
         return fetch(url, config)
             .then(res => {
                 if (res.ok) {
-                    return method !== 'DELETE' && !returnsNoBody ? res.json() : res.status;
+                    const contentLength = res.headers.get('content-length');
+                    return method !== 'DELETE' && contentLength && Number(contentLength) > 0? res.json() : res.status;
                 }
                 return null;
             })
diff --git a/components/CustomModal/CustomModal.scss b/components/CustomModal/CustomModal.scss
index 9616b28..d6d31d2 100644
--- a/components/CustomModal/CustomModal.scss
+++ b/components/CustomModal/CustomModal.scss
@@ -17,23 +17,13 @@
 
     &-header {
         margin: 0 0 24px;
-        font-size: $small-font-size;
-    }
-
-    &-header-large {
-        margin: 0 0 24px;
-        font-size: $medium-font-size;
-
-        @media (max-width: $xl-breakpoint-1279) {
-            font-size: $small-font-size;
-        }
     }
 
     .ant-form-item {
         margin: 0;
     }
 
-    :not(.ant-col, .ant-row) >.ant-form-item:not(.ant-form-item:first-child) {
+    .ant-form-item:not(.ant-form-item:first-child) {
         margin-top: 16px;
     }
 }
diff --git a/components/Profile/EditProfile/EditName/EditName.tsx b/components/Profile/EditProfile/EditName/EditName.tsx
index 1a0f53c..cd90d04 100644
--- a/components/Profile/EditProfile/EditName/EditName.tsx
+++ b/components/Profile/EditProfile/EditName/EditName.tsx
@@ -6,8 +6,7 @@ import { updateUser } from '@/app/api/api';
 import { useSession } from 'next-auth/react';
 import { IUserUpdateResponse } from '@/app/types/user-interfaces';
 import {ValidationStatus} from '@/lib/utils/modalTypes';
-import CustomModal, { customModalClassname } from '@/components/CustomModal/CustomModal';
-import classNames from 'classnames';
+import CustomModal from '@/components/CustomModal/CustomModal';
 
 export default function EditName({currentModal, setCurrentModal}: SubModalProps) {
     const [form] = Form.useForm();
@@ -61,7 +60,7 @@ export default function EditName({currentModal, setCurrentModal}: SubModalProps)
                onCancel={onCancel}
                width={xs ? '100%' : 400}
                centered
-               title={<h2 className={classNames(`${customModalClassname}-header-large`, 'roboto-flex-header')}>Изменить
+               title={<h2 className={'edit-profile-header roboto-flex-header responsive-header-h2'}>Изменить
                    логин</h2>}
                footer={null}
         >
diff --git a/components/Profile/EditProfile/EditPassword/EditPassword.tsx b/components/Profile/EditProfile/EditPassword/EditPassword.tsx
index f7772a6..fce4ad7 100644
--- a/components/Profile/EditProfile/EditPassword/EditPassword.tsx
+++ b/components/Profile/EditProfile/EditPassword/EditPassword.tsx
@@ -2,15 +2,18 @@
 
 import { ModalEnum, SubModalProps } from '@/components/Profile/EditProfile/EditProfile.helpers';
 import { Button, Form, Input } from 'antd';
-import React, { useState } from 'react';
+import React, { useMemo, useState } from 'react';
 import useBreakpoint from 'antd/es/grid/hooks/useBreakpoint';
 import { updatePassword } from '@/app/api/api';
 import { IUser } from '@/app/types/user-interfaces';
 import { useSession } from 'next-auth/react';
+import { getCenter } from '@/lib/utils/utils';
 import {ValidationStatus} from '@/lib/utils/modalTypes';
 import CustomModal from '@/components/CustomModal/CustomModal';
 
 export default function EditPassword({currentModal, setCurrentModal}: SubModalProps) {
+    const {clientWidth, clientHeight} = document.body;
+    const centerPosition = useMemo(() => getCenter(clientWidth, clientHeight), [clientWidth, clientHeight]);
     const [form] = Form.useForm();
     const { xs } = useBreakpoint();
     const {data} = useSession();
@@ -53,6 +56,7 @@ export default function EditPassword({currentModal, setCurrentModal}: SubModalPr
                width={xs ? '100%' : 400}
                centered
                title={<h2 className={'edit-profile-header roboto-flex-header responsive-header-h2'}>Изменить пароль</h2>}
+               mousePosition={centerPosition}
                footer={null}
         >
             <Form form={form} autoComplete={'off'} preserve={false}>
diff --git a/components/Profile/Profile.tsx b/components/Profile/Profile.tsx
index 4d3ba3f..c8aafd9 100644
--- a/components/Profile/Profile.tsx
+++ b/components/Profile/Profile.tsx
@@ -2,6 +2,7 @@
 
 import ContentWrapper from '@/components/ContentWrapper/ContentWrapper';
 
+import './Profile.scss';
 import useBreakpoint from 'antd/es/grid/hooks/useBreakpoint';
 import EditProfile from '@/components/Profile/EditProfile/EditProfile';
 import ExitButton from '@/components/ExitButton/ExitButton';
diff --git a/components/Quest/CreateTeam/CreateTeam.scss b/components/Quest/CreateTeam/CreateTeam.scss
index 08930ae..9768797 100644
--- a/components/Quest/CreateTeam/CreateTeam.scss
+++ b/components/Quest/CreateTeam/CreateTeam.scss
@@ -3,13 +3,32 @@
 .create-team-modal__content {
     padding: 32px 32px 40px 32px !important;
 
-    .custom-modal-header-large {
-        margin-bottom: 16px;
+    .ant-modal-close {
+        width: 24px;
+        height: 24px;
+
+        & svg {
+            width: 24px;
+            height: 24px;
+        }
     }
+
+    .ant-modal-footer {
+        display: none;
+    }
+
     .ant-form-item {
         margin: 0;
     }
 
+    .ant-form-item:not(.ant-form-item:first-child) {
+        margin-top: 16px;
+    }
+
+    .ant-modal-header {
+        margin-bottom: 16px;
+    }
+
     .ant-modal-title h2 {
         font-size: $medium-font-size;
     }
diff --git a/components/Quest/CreateTeam/CreateTeam.tsx b/components/Quest/CreateTeam/CreateTeam.tsx
index 80ce5bf..7220a83 100644
--- a/components/Quest/CreateTeam/CreateTeam.tsx
+++ b/components/Quest/CreateTeam/CreateTeam.tsx
@@ -1,7 +1,8 @@
 'use client';
 
-import React, { useState } from 'react';
-import { Button, Form, Input } from 'antd';
+import React, { useMemo, useState } from 'react';
+import { getCenter } from '@/lib/utils/utils';
+import { Button, Form, Input, Modal } from 'antd';
 import FormItem from 'antd/lib/form/FormItem';
 import useBreakpoint from 'antd/es/grid/hooks/useBreakpoint';
 import { createTeam } from '@/app/api/api';
@@ -9,11 +10,12 @@ import { ITeam } from '@/app/types/user-interfaces';
 import { useSession } from 'next-auth/react';
 import { useRouter } from 'next/navigation';
 
+import './CreateTeam.scss'
 import {ModalProps, TeamModal, ValidationStatus} from '@/lib/utils/modalTypes';
-import CustomModal, { customModalClassname } from '@/components/CustomModal/CustomModal';
-import classNames from 'classnames';
 
 export default function CreateTeam({questId, currentModal, setCurrentModal}: ModalProps) {
+    const {clientWidth, clientHeight} = document.body;
+    const centerPosition = useMemo(() => getCenter(clientWidth, clientHeight), [clientWidth, clientHeight]);
     const [form] = Form.useForm();
     const { xs } = useBreakpoint();
     const {data} = useSession();
@@ -64,14 +66,16 @@ export default function CreateTeam({questId, currentModal, setCurrentModal}: Mod
     };
 
     return (
-        <CustomModal
+        <Modal
+            className={'create-team-modal'}
             classNames={{content: 'create-team-modal__content'}}
             open={currentModal === TeamModal.CREATE_TEAM}
             centered
             destroyOnClose
             onCancel={onCancel}
             width={xs ? '100%' : 400}
-            title={<h2 className={classNames(`${customModalClassname}-header-large`, 'roboto-flex-header')}>Регистрация команды</h2>}
+            title={<h2 className={'roboto-flex-header'}>Регистрация команды</h2>}
+            mousePosition={centerPosition}
             footer={null}
         >
             <span className={'create-team-content__span'}>Укажите название команды</span>
@@ -96,6 +100,6 @@ export default function CreateTeam({questId, currentModal, setCurrentModal}: Mod
                     >Зарегистрировать команду</Button>
                 </FormItem>
             </Form>
-        </CustomModal>
+        </Modal>
     );
 }
diff --git a/components/Quest/InviteModal/InviteModal.scss b/components/Quest/InviteModal/InviteModal.scss
index d114836..3131751 100644
--- a/components/Quest/InviteModal/InviteModal.scss
+++ b/components/Quest/InviteModal/InviteModal.scss
@@ -20,14 +20,36 @@
         }
     }
 
-    .custom-modal-header-large {
-        margin-bottom: 16px;
+    .ant-modal-close {
+        width: 24px;
+        height: 24px;
+
+        & svg {
+            width: 24px;
+            height: 24px;
+        }
+    }
+
+    .ant-modal-footer {
+        display: none;
     }
 
     .ant-form-item {
         margin: 0;
     }
 
+    .ant-form-item:not(.ant-form-item:first-child) {
+        margin-top: 16px;
+    }
+
+    .ant-modal-header {
+        margin-bottom: 16px;
+    }
+
+    .ant-modal-title h2 {
+        font-size: 32px;
+    }
+
     .ant-modal-body {
         display: flex;
         flex-direction: column;
diff --git a/components/Quest/InviteModal/InviteModal.tsx b/components/Quest/InviteModal/InviteModal.tsx
index 6075df7..98c9a8f 100644
--- a/components/Quest/InviteModal/InviteModal.tsx
+++ b/components/Quest/InviteModal/InviteModal.tsx
@@ -1,14 +1,15 @@
 'use client'
 
-import React from 'react';
-import { Input, message } from 'antd';
+import React, { useMemo } from 'react';
+import { getCenter } from '@/lib/utils/utils';
+import { Input, message, Modal } from 'antd';
 import useBreakpoint from 'antd/es/grid/hooks/useBreakpoint';
 import { CopyOutlined } from '@ant-design/icons';
 import {ModalProps, TeamModal} from '@/lib/utils/modalTypes';
-import CustomModal, { customModalClassname } from '@/components/CustomModal/CustomModal';
-import classNames from 'classnames';
 
 export default function InviteModal({inviteLink, currentModal, setCurrentModal}: ModalProps) {
+    const {clientWidth, clientHeight} = document.body;
+    const centerPosition = useMemo(() => getCenter(clientWidth, clientHeight), [clientWidth, clientHeight]);
     const { xs } = useBreakpoint();
     const [messageApi, contextHolder] = message.useMessage();
 
@@ -25,14 +26,16 @@ export default function InviteModal({inviteLink, currentModal, setCurrentModal}:
     };
 
     return (
-        <CustomModal
+        <Modal
+            className={'invite-modal'}
             classNames={{content: 'invite-modal__content'}}
             open={currentModal === TeamModal.INVITE_LINK}
             centered
             destroyOnClose
             onCancel={onCancel}
             width={xs ? '100%' : 400}
-            title={<h2 className={classNames(`${customModalClassname}-header-large`, 'roboto-flex-header')}>Команда зарегистрирована</h2>}
+            title={<h2 className={'roboto-flex-header responsive-header-h2'}>Команда зарегистрирована</h2>}
+            mousePosition={centerPosition}
             footer={null}
         >
             <span className={'invite-content__span'}>Пригласите друзей в свою команду</span>
@@ -46,6 +49,6 @@ export default function InviteModal({inviteLink, currentModal, setCurrentModal}:
                     navigator.clipboard.writeText(inviteLink!).then(() => success()).catch(err => {throw err});
                 }}/>}
             />
-        </CustomModal>
+        </Modal>
     );
 }
diff --git a/components/Quest/Quest.helpers.tsx b/components/Quest/Quest.helpers.tsx
index 14dff45..7ac8603 100644
--- a/components/Quest/Quest.helpers.tsx
+++ b/components/Quest/Quest.helpers.tsx
@@ -1,6 +1,8 @@
 import { Button } from 'antd';
 import { CheckOutlined, FlagFilled, PlayCircleFilled } from '@ant-design/icons';
 import { ITeam, IUser } from '@/app/types/user-interfaces';
+
+import '@/components/QuestTabs/QuestCard/QuestCard.scss';
 import React, { Dispatch, SetStateAction } from 'react';
 import Link from 'next/link';
 import { usePathname } from 'next/navigation';
diff --git a/components/QuestAdmin/Leaderboard/EditPenalty/EditPenalty.tsx b/components/QuestAdmin/Leaderboard/EditPenalty/EditPenalty.tsx
index 08861cf..b8b4572 100644
--- a/components/QuestAdmin/Leaderboard/EditPenalty/EditPenalty.tsx
+++ b/components/QuestAdmin/Leaderboard/EditPenalty/EditPenalty.tsx
@@ -14,7 +14,7 @@ export default function EditPenalty({record, questId}: {record: IAdminLeaderboar
     const {data: session} = useSession();
     const [form] = Form.useForm();
     const [currentValue, setCurrentValue] =
-        useState<number>(-1 * record.penalty);
+        useState<number>(-1 * record.penalty ?? 0);
 
     const handleFieldChange = () => {
         setCurrentValue(Number(form.getFieldValue('penalty')));
@@ -30,7 +30,7 @@ export default function EditPenalty({record, questId}: {record: IAdminLeaderboar
         }
 
         const data: IEditPenaltyRequest  = {
-            penalty: -1 * (record.penalty + currentValue),
+            penalty: -1 * (Number(record.penalty) + Number(currentValue)),
             team_id: `${record.team_id}`
         };
 
@@ -53,7 +53,7 @@ export default function EditPenalty({record, questId}: {record: IAdminLeaderboar
                          onCancel={onCancel}
                          width={xs ? '100%' : 400}
                          centered
-                         title={<h2 className={classNames(`${customModalClassname}-header-large`, 'roboto-flex-header')}>Бонус
+                         title={<h2 className={classNames(`${customModalClassname}-header`, 'roboto-flex-header', 'responsive-header-h2')}>Бонус
                              команде</h2>}
                          footer={null}
             >
@@ -67,7 +67,7 @@ export default function EditPenalty({record, questId}: {record: IAdminLeaderboar
                             type={'number'}
                             style={{ borderRadius: '2px', width: '100%' }}
                             step={100}
-                            defaultValue={-1 * record.penalty}
+                            defaultValue={-1 * record.penalty ?? 0}
                             value={currentValue}
                             placeholder={'Количество баллов'}
                             onChange={handleFieldChange}
diff --git a/components/QuestAdmin/Leaderboard/Leaderboard.tsx b/components/QuestAdmin/Leaderboard/Leaderboard.tsx
index de8f3b1..20d3492 100644
--- a/components/QuestAdmin/Leaderboard/Leaderboard.tsx
+++ b/components/QuestAdmin/Leaderboard/Leaderboard.tsx
@@ -39,9 +39,9 @@ export default function Leaderboard({teams, questId}: {teams: IAdminLeaderboardR
             dataIndex: 'penalty',
             key: 'penalty',
             className: 'leaderboard__penalty',
-            render: (_, record) => (
+            render: (text, record) => (
                 RELEASED_FEATURE ? <>
-                    {-1 * (record as IAdminLeaderboardResult).penalty}
+                    {-1*Number((record as IAdminLeaderboardResult).penalty)}
                     <EditPenalty record={(record as IAdminLeaderboardResult)} questId={questId} />
                 </> : <span>{(record as IAdminLeaderboardResult).penalty}</span>
             )
diff --git a/components/Tasks/PlayPageContent/PlayPageContent.tsx b/components/Tasks/PlayPageContent/PlayPageContent.tsx
index 5c9629d..b6120d1 100644
--- a/components/Tasks/PlayPageContent/PlayPageContent.tsx
+++ b/components/Tasks/PlayPageContent/PlayPageContent.tsx
@@ -5,9 +5,11 @@ import Tasks from '@/components/Tasks/Tasks';
 import { TasksMode } from '@/components/Tasks/Tasks.helpers';
 import { IQuestTaskGroupsResponse} from '@/app/types/quest-interfaces';
 import ContentWrapper from '@/components/ContentWrapper/ContentWrapper';
+
 import { ArrowLeftOutlined, HourglassOutlined, TeamOutlined } from '@ant-design/icons';
-import { getLongTimeDiff, getRemainingVerb } from '@/components/Quest/Quest.helpers';
 
+import './PlayPageContent.scss'
+import { getLongTimeDiff, getRemainingVerb } from '@/components/Quest/Quest.helpers';
 
 export default function PlayPageContent({props}: {props: IQuestTaskGroupsResponse}) {
     const {name: teamName} = props.team;
diff --git a/components/Tasks/Task/EditTask/EditTask.scss b/components/Tasks/Task/EditTask/EditTask.scss
index f092b54..5969d01 100644
--- a/components/Tasks/Task/EditTask/EditTask.scss
+++ b/components/Tasks/Task/EditTask/EditTask.scss
@@ -73,11 +73,29 @@
         border-radius: 2px;
     }
 
+    .ant-modal-close {
+        width: 24px;
+        height: 24px;
+
+        & svg {
+            width: 24px;
+            height: 24px;
+        }
+    }
+
 
     .ant-form-item {
         margin: 0;
     }
 
+    .ant-modal-header {
+        margin-bottom: 16px;
+    }
+
+    .ant-modal-title h3 {
+        font-size: 24px;
+    }
+
     .ant-form {
         display: flex;
         flex-direction: column;
diff --git a/components/Tasks/Task/EditTask/EditTask.tsx b/components/Tasks/Task/EditTask/EditTask.tsx
index 1321a6f..c7dc7c3 100644
--- a/components/Tasks/Task/EditTask/EditTask.tsx
+++ b/components/Tasks/Task/EditTask/EditTask.tsx
@@ -7,13 +7,14 @@ import {
     Form,
     Input,
     InputNumber,
+    Modal,
     Row,
     Upload,
     UploadFile, UploadProps
 } from 'antd';
 import FormItem from 'antd/lib/form/FormItem';
-import React, {Dispatch, SetStateAction, useEffect, useState} from 'react';
-import {uid} from '@/lib/utils/utils';
+import React, {Dispatch, SetStateAction, useEffect, useMemo, useState} from 'react';
+import {getCenter, uid} from '@/lib/utils/utils';
 import useBreakpoint from 'antd/es/grid/hooks/useBreakpoint';
 import {
     DeleteOutlined,
@@ -23,6 +24,8 @@ import {
     ReloadOutlined,
     UploadOutlined
 } from '@ant-design/icons';
+
+import './EditTask.scss';
 import theme, { blueOutlinedButton } from '@/lib/theme/themeConfig';
 import ru_RU from 'antd/lib/locale/ru_RU';
 import {useTasksContext} from "@/components/Tasks/ContextProvider/ContextProvider";
@@ -37,8 +40,6 @@ import client from "@/app/api/client/client";
 import {ValidationStatus} from "@/lib/utils/modalTypes";
 import {useSession} from "next-auth/react";
 import {patchTaskGroups} from "@/app/api/api";
-import classNames from 'classnames';
-import CustomModal, { customModalClassname } from '@/components/CustomModal/CustomModal';
 
 const {TextArea} = Input;
 
@@ -61,6 +62,8 @@ export interface TaskForm {
 }
 
 export default function EditTask({questId, isOpen, setIsOpen, taskGroupProps, fileList, setFileList, task}: TaskCreateModalProps) {
+    const {clientWidth, clientHeight} = document.body;
+    const centerPosition = useMemo(() => getCenter(clientWidth, clientHeight), [clientWidth, clientHeight]);
     const { xs, md } = useBreakpoint();
 
     const [pointsAmount, setPointsAmount] = useState(task?.reward ?? 100);
@@ -284,13 +287,15 @@ export default function EditTask({questId, isOpen, setIsOpen, taskGroupProps, fi
 
     return (
         <ConfigProvider theme={theme} locale={ru_RU}>
-            <CustomModal
+            <Modal
+                className={'edit-task__modal'}
                 classNames={{content: 'edit-task__content'}}
                 open={isOpen}
                 width={xs ?? md ? '100%': 800}
                 centered
                 destroyOnClose
-                title={<h3 className={classNames(`${customModalClassname}-header`, 'roboto-flex-header')}>Редактирование задачи</h3>}
+                mousePosition={centerPosition}
+                title={<h3 className={'roboto-flex-header'}>Редактирование задачи</h3>}
                 onCancel={onCancel}
                 footer={[
                     <Button key={'save'} type={'primary'} onClick={handleSaveTask}>
@@ -487,7 +492,7 @@ export default function EditTask({questId, isOpen, setIsOpen, taskGroupProps, fi
                         </Col>
                     </Row>
                 </Form>
-            </CustomModal>
+            </Modal>
         </ConfigProvider>
     );
 }
diff --git a/components/Tasks/Task/Task.tsx b/components/Tasks/Task/Task.tsx
index b45d11e..45bd706 100644
--- a/components/Tasks/Task/Task.tsx
+++ b/components/Tasks/Task/Task.tsx
@@ -10,6 +10,8 @@ import { getTaskExtra, TasksMode } from '@/components/Tasks/Tasks.helpers';
 import { answerTaskPlayMode, takeHintPlayMode } from '@/app/api/api';
 import { useSession } from 'next-auth/react';
 import { useState } from 'react';
+
+import './Task.scss';
 import { useRouter } from 'next/navigation';
 import Markdown from 'react-markdown';
 import remarkGfm from 'remark-gfm';
diff --git a/components/Tasks/TaskGroup/EditTaskGroup/EditTaskGroup.tsx b/components/Tasks/TaskGroup/EditTaskGroup/EditTaskGroup.tsx
index bcf7a12..d0e2694 100644
--- a/components/Tasks/TaskGroup/EditTaskGroup/EditTaskGroup.tsx
+++ b/components/Tasks/TaskGroup/EditTaskGroup/EditTaskGroup.tsx
@@ -1,7 +1,8 @@
 'use client';
 
-import {Button, Form, Input} from 'antd';
-import {Dispatch, SetStateAction, useState} from 'react';
+import {Button, Form, Input, Modal} from 'antd';
+import {Dispatch, SetStateAction, useMemo, useState} from 'react';
+import { getCenter } from '@/lib/utils/utils';
 import { useTasksContext } from '@/components/Tasks/ContextProvider/ContextProvider';
 import useBreakpoint from 'antd/es/grid/hooks/useBreakpoint';
 import {ValidationStatus} from "@/lib/utils/modalTypes";
@@ -14,7 +15,6 @@ import {
     ITaskGroupsCreate,
     ITaskGroupsUpdate
 } from '@/app/types/quest-interfaces';
-import CustomModal from '@/components/CustomModal/CustomModal';
 
 interface TaskGroupModalProps {
     questId: string;
@@ -28,6 +28,8 @@ export interface TaskGroupForm {
 }
 
 export default function EditTaskGroup({questId, isOpen, setIsOpen, taskGroupProps}: TaskGroupModalProps) {
+    const {clientWidth, clientHeight} = document.body;
+    const centerPosition = useMemo(() => getCenter(clientWidth, clientHeight), [clientWidth, clientHeight]);
     const { xs } = useBreakpoint();
     const [form] = Form.useForm<TaskGroupForm>();
 
@@ -115,12 +117,13 @@ export default function EditTaskGroup({questId, isOpen, setIsOpen, taskGroupProp
     }
 
     return (
-      <CustomModal
+      <Modal
           open={isOpen}
           centered
           destroyOnClose
           width={xs ? '100%' : 400}
           title={<h2 className={'roboto-flex-header'}>{title}</h2>}
+          mousePosition={centerPosition}
           footer={null}
           onCancel={onCancel}
       >
@@ -146,6 +149,6 @@ export default function EditTaskGroup({questId, isOpen, setIsOpen, taskGroupProp
                   </Button>
               </Form.Item>
           </Form>
-      </CustomModal>
+      </Modal>
     );
 }
diff --git a/components/Tasks/TaskGroup/TaskGroup.tsx b/components/Tasks/TaskGroup/TaskGroup.tsx
index 05581d3..09f158c 100644
--- a/components/Tasks/TaskGroup/TaskGroup.tsx
+++ b/components/Tasks/TaskGroup/TaskGroup.tsx
@@ -7,6 +7,8 @@ import { getTaskExtra, TasksMode } from '@/components/Tasks/Tasks.helpers';
 import { ITaskGroup } from '@/app/types/quest-interfaces';
 import TaskGroupExtra from '@/components/Tasks/TaskGroup/TaskGroupExtra/TaskGroupExtra';
 
+import './TaskGroup.scss';
+
 interface TaskGroupProps {
     mode: TasksMode,
     props: ITaskGroup,
